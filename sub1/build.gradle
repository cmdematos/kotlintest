/*
	Compared to what it would take to configure everything from scratch, this is a decided improvement, particularly if
	there are multiple projects that can make use of the same pattern.

	There are still a couple of gripes, however.
	1.  It would be nice if kotlintest.gradle could be injected at the pluginManagement.resolutionStrategy level and
		resolved by name.  (id 'kotlintest')

	2.  More significantly, there's no way for script plugins to inject other plugins, so the specific indirect
		plugin dependencies can't be encapsulated.  If this is a Java project with kotlin-based testing, then it
		would be preferable to just declare plugins 'java' and 'kotlintest' and not have to worry about any further
		details.
 */

plugins {
	id 'java'
	id 'org.jetbrains.kotlin.jvm'
}

apply from: kotlintestScript

dependencies {
	// Any code from the main source set
	implementation project(':shared')

	// Any test utility code from the test source set
	testImplementation testFixtures(project(':shared'))
}
