/*
	All the previous configuration work makes it possible to encapsulate most of the details needed for kotlin
	testing support in a script plugin.

	Test language: Kotlin
	Test framework: Spek2
	Assertion framework: Kluent
	Mocking: Mockk
 */

dependencies {
	testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

	testImplementation "org.spekframework.spek2:spek-dsl-jvm:${spekVersion}"
	testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:${spekVersion}"

	testImplementation "org.amshove.kluent:kluent:${kluentVersion}"
	testImplementation "io.mockk:mockk:${mockkVersion}"
	
	// JUnit is not used directly in the IDE (the Spek Framework plugin handles test runs), but it's needed for test runs in Gradle.
	testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"	
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

sourceSets {
	test {
		java {
			// Java code can be placed in the Kotlin source tree, but for it to be on the runtime classpath, it needs 
			// to be added to the Java source set.  See https://kotlinlang.org/docs/reference/using-gradle.html#targeting-the-jvm
			srcDirs += 'src/test/kotlin'
		}
	}
}

test {
	useJUnitPlatform {
		includeEngines 'spek2'
	}
}
